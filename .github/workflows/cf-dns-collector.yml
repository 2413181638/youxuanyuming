# .github/workflows/cf-dns-collector.yml
name: CF DNS Collector

on:
  schedule:
    - cron: "*/15 * * * *"     # 每 15 分钟（UTC）
  workflow_dispatch:           # 支持手动触发

permissions:
  contents: write              # 允许提交 ips.txt

# 避免重叠：如果上一次还在跑，就让“新的一次”自动取消
concurrency:
  group: cf-dns-collector
  cancel-in-progress: true

jobs:
  collect:
    runs-on: ubuntu-latest
    timeout-minutes: 45        # 运行时间放宽（脚本是低速稳态策略）

    steps:
      # 1) 检出代码（完整历史，便于后续 rebase）
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}
          fetch-depth: 0

      # 2) 与远端同步，避免分叉导致 push 失败
      - name: Sync with remote (rebase)
        run: |
          git fetch origin ${{ github.ref_name }}
          git pull --rebase origin ${{ github.ref_name }} || true

      # 3) Python 环境
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # 4) 安装依赖
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install dnspython

      # 5) 运行采集脚本（注意：脚本会低速稳态运行较久）
      - name: Run collector
        env:
          PYTHONIOENCODING: "utf-8"
          LC_ALL: "C.UTF-8"
          LANG: "C.UTF-8"
        run: |
          python dns_collect.py

      # 6) 输出解析到的 IPv4 数量（方便在日志里快速查看）
      - name: Show IP count
        run: |
          if [ -f ips.txt ]; then
            echo "IPv4 count: $(grep -c '^[0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+$' ips.txt || true)"
          else
            echo "ips.txt not found"
          fi

      # 7) 仅当 ips.txt 变化时才提交（避免无意义提交）
      - name: Commit & Push if ips.txt changed
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: update ips.txt (auto)"
          file_pattern: ips.txt
